//apply from: rootProject.getRootDir().getAbsolutePath() + "/common_config.gradle"
apply from: "${rootProject.rootDir}/common_config.gradle"
if(project.ext.isLib){
    apply plugin: 'com.android.library'
    apply from: 'fat-aar.gradle'
}else {
    apply plugin: 'com.android.application'
}

android {
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion
    defaultConfig {
        if (!project.ext.isLib) {
            applicationId project.ext.applicationId
        }
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:design:25.0.1'
    compile 'com.android.support:appcompat-v7:25.0.1'
    if (project.ext.isLib) {
        embedded project(':page_body')
        embedded project(':page_body_bt')
        embedded project(':page_name')
        embedded project(':page_view')
    } else {
        if (!project.ext.isDebug) {
            compile project(':a')
            compile project(':b')
            compile project(':page_body')
            compile project(':page_body_bt')
            compile project(':page_name')
            compile project(':page_view')
        } else {
            compile project(':core')
        }
    }
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def siteUrl = 'https://github.com/nottosay/ModuleBus'    // project homepage
def gitUrl = 'https://github.com/nottosay/ModuleBus.git' // project git

group = "com.wally.sdk"
version = "1.0.0"

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'dynamicadapter'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'nottosay'
                        name 'wally'
                        email '81556494@qq.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }


    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    bintray {
        user = POM_BINTRAY_USER
        key = POM_BINTRAY_APIKRY
        configurations = ['archives']
        pkg {
            repo = "wallysdktest"
            name = "wallysdk"
            websiteUrl = siteUrl
            vcsUrl = gitUrl
            licenses = ["Apache-2.0"]
            publish = true
        }
    }
}

